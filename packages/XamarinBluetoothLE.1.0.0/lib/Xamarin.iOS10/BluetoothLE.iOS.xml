<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BluetoothLE.iOS</name>
    </assembly>
    <members>
        <member name="T:BluetoothLE.iOS.Adapter">
            <summary>
            Concrete implementation of <see cref="T:BluetoothLE.Core.IAdapter" /> interface.
            </summary></member>
        <member name="P:BluetoothLE.iOS.Adapter.Current">
            <summary>
            Gets the current Adpater instance
            </summary>
            <value>The current Adapter instance</value></member>
        <member name="M:BluetoothLE.iOS.Adapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BluetoothLE.iOS.Adapter" /> class.
            </summary></member>
        <member name="E:BluetoothLE.iOS.Adapter.DeviceDiscovered">
            <summary>
            Occurs when device discovered.
            </summary></member>
        <member name="E:BluetoothLE.iOS.Adapter.DeviceConnected">
            <summary>
            Occurs when device connected.
            </summary></member>
        <member name="E:BluetoothLE.iOS.Adapter.DeviceDisconnected">
            <summary>
            Occurs when device disconnected.
            </summary></member>
        <member name="E:BluetoothLE.iOS.Adapter.ScanTimeoutElapsed">
            <summary>
            Occurs when scan timeout elapsed.
            </summary></member>
        <member name="E:BluetoothLE.iOS.Adapter.DeviceFailedToConnect">
            <summary>
            Occurs when a device failed to connect.
            </summary></member>
        <member name="P:BluetoothLE.iOS.Adapter.ScanTimeout">
            <summary>
            Gets or sets the amount of time to scan for devices.
            </summary>
            <value>The scan timeout.</value></member>
        <member name="P:BluetoothLE.iOS.Adapter.ConnectionTimeout">
            <summary>
            Gets or sets the amount of time to attempt to connect to a device.
            </summary>
            <value>The connection timeout.</value></member>
        <member name="M:BluetoothLE.iOS.Adapter.StartScanningForDevices">
            <summary>
            Start scanning for devices.
            </summary></member>
        <member name="M:BluetoothLE.iOS.Adapter.StartScanningForDevices(System.String[])">
            <summary>
            Start scanning for devices.
            </summary>
            <param name="serviceUuids">White-listed service UUIDs</param></member>
        <member name="M:BluetoothLE.iOS.Adapter.StopScanningForDevices">
            <summary>
            Stop scanning for devices.
            </summary></member>
        <member name="M:BluetoothLE.iOS.Adapter.ConnectToDevice(BluetoothLE.Core.IDevice)">
            <summary>
            Connect to a device.
            </summary>
            <param name="device">The device.</param></member>
        <member name="M:BluetoothLE.iOS.Adapter.DisconnectDevice(BluetoothLE.Core.IDevice)">
            <summary>
            Discconnect from a device.
            </summary>
            <param name="device">The device.</param></member>
        <member name="P:BluetoothLE.iOS.Adapter.IsScanning">
            <summary>
            Gets a value indicating whether this instance is scanning.
            </summary>
            <value>true</value>
            <c>false</c></member>
        <member name="P:BluetoothLE.iOS.Adapter.DiscoveredDevices">
            <summary>
            Gets the discovered devices.
            </summary>
            <value>The discovered devices.</value></member>
        <member name="P:BluetoothLE.iOS.Adapter.ConnectedDevices">
            <summary>
            Gets the connected devices.
            </summary>
            <value>The connected devices.</value></member>
        <member name="T:BluetoothLE.iOS.Device">
            <summary>
            Concrete implmentation of <see cref="T:BluetoothLE.Core.IDevice" /> interface
            </summary></member>
        <member name="M:BluetoothLE.iOS.Device.#ctor(CoreBluetooth.CBPeripheral)">
            <summary>
            Initializes a new instance of the <see cref="T:BluetoothLE.iOS.Device" /> class.
            </summary>
            <param name="peripheral">Native peripheral.</param></member>
        <member name="M:BluetoothLE.iOS.Device.DeviceIdentifierToGuid(Foundation.NSUuid)">
            <summary>
            Gets the device identifier.
            </summary>
            <returns>The device identifier as a Guid.</returns>
            <param name="id">The device identifier as a NSUuid.</param></member>
        <member name="E:BluetoothLE.iOS.Device.ServiceDiscovered">
            <summary>
            Occurs when services discovered.
            </summary></member>
        <member name="M:BluetoothLE.iOS.Device.DiscoverServices">
            <summary>
            Initiate a service discovery on the device
            </summary></member>
        <member name="M:BluetoothLE.iOS.Device.Disconnect">
            <summary>
            Discconnect from the device.
            </summary></member>
        <member name="P:BluetoothLE.iOS.Device.Id">
            <summary>
            Gets the unique identifier for the device
            </summary>
            <value>The device identifier</value></member>
        <member name="P:BluetoothLE.iOS.Device.Name">
            <summary>
            Gets the device name
            </summary>
            <value>The device name</value></member>
        <member name="P:BluetoothLE.iOS.Device.Rssi">
            <summary>
            Gets the Received Signal Strength Indicator
            </summary>
            <value>The RSSI in decibels</value></member>
        <member name="P:BluetoothLE.iOS.Device.NativeDevice">
            <summary>
            Gets the native device object reference. Should be cast to the appropriate type.
            </summary>
            <value>The native device</value></member>
        <member name="P:BluetoothLE.iOS.Device.State">
            <summary>
            Gets the state of the device
            </summary>
            <value>The device's state</value></member>
        <member name="P:BluetoothLE.iOS.Device.Services">
            <summary>
            Gets the discovered services for the device
            </summary>
            <value>The device's services</value></member>
        <member name="M:BluetoothLE.iOS.Device.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:BluetoothLE.iOS.Device" /> object.
            </summary>
            <remarks>Call <see cref="M:BluetoothLE.iOS.Device.Dispose" /> when you are finished using the <see cref="T:BluetoothLE.iOS.Device" />. The
            <see cref="M:BluetoothLE.iOS.Device.Dispose" /> method leaves the <see cref="T:BluetoothLE.iOS.Device" /> in an unusable state. After calling
            <see cref="M:BluetoothLE.iOS.Device.Dispose" />, you must release all references to the <see cref="T:BluetoothLE.iOS.Device" /> so the garbage
            collector can reclaim the memory that the <see cref="T:BluetoothLE.iOS.Device" /> was occupying.</remarks></member>
        <member name="T:BluetoothLE.iOS.Characteristic">
            <summary>
            Concrete implmentation of <see cref="T:BluetoothLE.Core.ICharacteristic" /> interface
            </summary></member>
        <member name="M:BluetoothLE.iOS.Characteristic.#ctor(CoreBluetooth.CBPeripheral,CoreBluetooth.CBCharacteristic)">
            <summary>
            Initializes a new instance of the <see cref="T:BluetoothLE.iOS.Characteristic" /> class.
            </summary>
            <param name="peripheral">The native peripheral.</param>
            <param name="nativeCharacteristic">The native characteristic.</param></member>
        <member name="E:BluetoothLE.iOS.Characteristic.ValueUpdated">
            <summary>
            Occurs when value updated.
            </summary></member>
        <member name="M:BluetoothLE.iOS.Characteristic.StartUpdates">
            <summary>
            Subscribe to the characteristic
            </summary></member>
        <member name="M:BluetoothLE.iOS.Characteristic.StopUpdates">
            <summary>
            Unsubscribe from the characteristic
            </summary></member>
        <member name="M:BluetoothLE.iOS.Characteristic.Read">
            <summary>
            Read the characteristic's value
            </summary></member>
        <member name="M:BluetoothLE.iOS.Characteristic.Write(System.Byte[])">
            <summary>
            Write the specified data to the characteristic
            </summary>
            <param name="data">Data.</param></member>
        <member name="P:BluetoothLE.iOS.Characteristic.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>The unique identifier.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.Uuid">
            <summary>
            Gets the UUID.
            </summary>
            <value>The UUID.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.Value">
            <summary>
            Gets the characteristic's value.
            </summary>
            <value>The characteristic's value.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.StringValue">
            <summary>
            Gets the characteristic's value as a string.
            </summary>
            <value>The characteristic's value, interpreted as a string.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.NativeCharacteristic">
            <summary>
            Gets the native characteristic. Should be cast to the appropriate type.
            </summary>
            <value>The native characteristic.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.Properties">
            <summary>
            Gets the characteristic's properties
            </summary>
            <value>The characteristic's properties.</value></member>
        <member name="P:BluetoothLE.iOS.Characteristic.CanRead">
            <summary>
            Gets a value indicating whether this instance can read.
            </summary>
            <value>true</value>
            <c>false</c></member>
        <member name="P:BluetoothLE.iOS.Characteristic.CanUpdate">
            <summary>
            Gets a value indicating whether this instance can update.
            </summary>
            <value>true</value>
            <c>false</c></member>
        <member name="P:BluetoothLE.iOS.Characteristic.CanWrite">
            <summary>
            Gets a value indicating whether this instance can write.
            </summary>
            <value>true</value>
            <c>false</c></member>
        <member name="M:BluetoothLE.iOS.Characteristic.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:BluetoothLE.iOS.Characteristic" /> object.
            </summary>
            <remarks>Call <see cref="M:BluetoothLE.iOS.Characteristic.Dispose" /> when you are finished using the <see cref="T:BluetoothLE.iOS.Characteristic" />. The
            <see cref="M:BluetoothLE.iOS.Characteristic.Dispose" /> method leaves the <see cref="T:BluetoothLE.iOS.Characteristic" /> in an unusable state. After
            calling <see cref="M:BluetoothLE.iOS.Characteristic.Dispose" />, you must release all references to the <see cref="T:BluetoothLE.iOS.Characteristic" />
            so the garbage collector can reclaim the memory that the <see cref="T:BluetoothLE.iOS.Characteristic" /> was occupying.</remarks></member>
        <member name="T:BluetoothLE.iOS.Service">
            <summary>
            Concrete implmentation of <see cref="T:BluetoothLE.Core.IService" /> interface
            </summary></member>
        <member name="M:BluetoothLE.iOS.Service.#ctor(CoreBluetooth.CBPeripheral,CoreBluetooth.CBService)">
            <summary>
            Initializes a new instance of the <see cref="T:BluetoothLE.iOS.Service" /> class.
            </summary>
            <param name="peripheral">The native peripheral.</param>
            <param name="service">The native service.</param></member>
        <member name="E:BluetoothLE.iOS.Service.CharacteristicDiscovered">
            <summary>
            Occurs when characteristics discovered.
            </summary></member>
        <member name="M:BluetoothLE.iOS.Service.DiscoverCharacteristics">
            <summary>
            Discovers the characteristics for the services.
            </summary></member>
        <member name="P:BluetoothLE.iOS.Service.Id">
            <summary>
            Gets the service's unique identifier.
            </summary>
            <value>The identifier.</value></member>
        <member name="P:BluetoothLE.iOS.Service.IsPrimary">
            <summary>
            Gets a value indicating whether this instance is primary.
            </summary>
            <value>true</value>
            <c>false</c></member>
        <member name="P:BluetoothLE.iOS.Service.Characteristics">
            <summary>
            Gets the service's characteristics.
            </summary>
            <value>The characteristics.</value></member>
        <member name="M:BluetoothLE.iOS.Service.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:BluetoothLE.iOS.Service" /> object.
            </summary>
            <remarks>Call <see cref="M:BluetoothLE.iOS.Service.Dispose" /> when you are finished using the <see cref="T:BluetoothLE.iOS.Service" />. The
            <see cref="M:BluetoothLE.iOS.Service.Dispose" /> method leaves the <see cref="T:BluetoothLE.iOS.Service" /> in an unusable state. After calling
            <see cref="M:BluetoothLE.iOS.Service.Dispose" />, you must release all references to the <see cref="T:BluetoothLE.iOS.Service" /> so the garbage
            collector can reclaim the memory that the <see cref="T:BluetoothLE.iOS.Service" /> was occupying.</remarks></member>
    </members>
</doc>
